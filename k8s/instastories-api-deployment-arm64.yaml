apiVersion: v1
kind: Service
metadata:
  name: instastories-api-service
  namespace: instastories-namespace
  labels:
    app: instastories
    tier: backend
spec:
  type: LoadBalancer
  selector:
    app: instastories
    tier: backend
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata: 
  name: instastories-api-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  namespace: instastories-namespace
spec:
  rules:
  - host: instastories-api.127.0.0.1.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend: 
          service: 
            name: instastories-api-service
            port:
              number: 5000
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: instastories-api-pv
spec:
  capacity:
    storage: 512Mi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /mnt/disks/kubernetes/instastories/api-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: instastories-api-pvc
  namespace: instastories-namespace
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: instastories-api-deployment
  namespace: instastories-namespace
  labels:
    app: instastories
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instastories
      tier: backend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: instastories
        tier: backend
    spec:
      containers:
      - name: instastories-api
        imagePullPolicy: Always
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        image: hpfpv/instastories-api:arm64-latest
        securityContext: {}
        resources:
          limits:
            memory: 256Mi
            cpu: "0.5"
          requests:
            memory: 256Mi
            cpu: "0.5"
        env:
        - name: MONGO_USER
          valueFrom: 
            secretKeyRef:
              name: instastories-mongo-secret
              key: mongo-user
        - name: MONGO_PWD
          valueFrom: 
            secretKeyRef:
              name: instastories-mongo-secret
              key: mongo-password
        - name: MONGO_URL
          valueFrom: 
            configMapKeyRef:
              name: instastories-mongo-config
              key: mongo-url
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: instastories-api-data
          mountPath: /app/data
      volumes:
        - name: instastories-api-data
          persistentVolumeClaim:
            claimName: instastories-api-pvc